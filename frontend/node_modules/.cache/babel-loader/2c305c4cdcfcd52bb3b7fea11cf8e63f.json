{"remainingRequest":"/home/woli/Projects/DataRoom/frontend/node_modules/babel-loader/lib/index.js!/home/woli/Projects/DataRoom/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/woli/Projects/DataRoom/frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/woli/Projects/DataRoom/frontend/src/components/adminBuildingDiv.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/woli/Projects/DataRoom/frontend/src/components/adminBuildingDiv.vue","mtime":1611705178403},{"path":"/home/woli/Projects/DataRoom/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607646038494},{"path":"/home/woli/Projects/DataRoom/frontend/node_modules/babel-loader/lib/index.js","mtime":1607646038462},{"path":"/home/woli/Projects/DataRoom/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607646038494},{"path":"/home/woli/Projects/DataRoom/frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1607646042274}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/woli/Projects/DataRoom/frontend/src/components/adminBuildingDiv.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\" style=\"margin: 0 !important;\">\n      <button type=\"button\" v-on:click=\"changeView('addUser')\"  class=\"btn blue darken-2 col s6\">Add user to building</button>\n      <button type=\"button\" v-on:click=\"changeView('removeUser')\" class=\"btn blue lighten-2 col s6\">Remove user from building</button>\n    </div>\n    <div class=\"row\" style=\"margin: 0 !important;\">\n      <button type=\"button\" v-on:click=\"changeView('addFloor')\" class=\"btn blue lighten-2 col s6\">Create new floor</button>\n      <button type=\"button\" v-on:click=\"changeView('removeFloor')\"  class=\"btn blue darken-2 col s6\">Remove floor</button>\n    </div>\n    <div class=\"row\" style=\"margin: 0 !important;\">\n      <button type=\"button\" v-on:click=\"changeView('updateFloor')\" class=\"btn blue darken-2 col s6\">Update floor settings</button>\n      <button type=\"button\" v-on:click=\"changeView('adminFloor')\" class=\"btn blue lighten-2 col s6\">Manage permissions</button>\n    </div>\n    <hr style=\"color:deepskyblue\"/>\n    <form v-if=\"activeView === 'addFloor'\" action=\"javascript:void(0)\" v-on:submit=\"addFloor\" id=\"addFloor\">\n      <div class=\"row input-field\">\n          <i class=\"material-icons prefix\">remove_red_eye</i>\n          <input class=\"validate\" id=\"addFloorName\" type=\"text\" required>\n          <label for=\"addFloorName\" class=\"active\" >Floor name</label>\n      </div>\n      <div class=\"row input-field\" style=\"margin-bottom: 25px;\">\n          <input type=\"checkbox\" id=\"addFloorPermission_public\"/>\n          <label for=\"addFloorPermission_public\">Public</label>\n      </div>\n      <div class=\"row input-field\" style=\"margin-bottom: 25px;\">\n        <input type=\"checkbox\" id=\"addFloorPermission_hidden\"/>\n        <label for=\"addFloorPermission_hidden\">Hidden</label>\n      </div>\n      <div class=\"row input-field\" style=\"margin-bottom: 25px;\">\n          <input type=\"checkbox\" id=\"addFloorPermission_everybody\"/>\n          <label for=\"addFloorPermission_everybody\">Everybody can create rooms</label>\n      </div>\n      <div class=\"row input-field\" style=\"margin-bottom: 25px;\">\n          <input type=\"checkbox\" id=\"addFloorPermission_creators\"/>\n          <label for=\"addFloorPermission_creators\">Creators can remove their rooms</label>\n      </div>\n      <div class=\"row\"/>\n      <div class=\"row input-field\">\n        <button type=\"submit\" class=\"btn btn blue darken-2\">CREATE FLOOR</button>\n      </div>\n    </form>\n    <form v-if=\"activeView === 'removeFloor'\" action=\"javascript:void(0)\" v-on:submit=\"removeFloor\" id=\"removeFloor\">\n      <div class=\"row input-field\">\n        <select id=\"removeFloorSelect\" v-model=\"removeFloor_data.selectedFloorToRemove\">\n          <option value=\"\" disabled>Select floor to delete</option>\n          <option v-for=\"(item, index) in removeFloor_data.floor_list\" :key=\"index\" :value=\"item\" >{{ item }}</option>\n        </select>\n      </div>\n      <button type=\"submit\" class=\"btn blue\">Remove floor</button>\n    </form>\n    <form v-if=\"activeView === 'removeUser'\" action=\"javascript:void(0)\" v-on:submit=\"removeUser\" id=\"removeUser\">\n      <div class=\"row input-field\">\n        <select id=\"removeUserSelect\" v-model=\"removeUser_data.selectedUserToRemove\">\n          <option value=\"\" disabled>Select user to remove</option>\n          <option v-for=\"(item, index) in removeUser_data.user_list\" :key=\"index\" :value=\"item['email']\" >{{ item['email'] }} - {{ item['first_name'] }} {{ item['second_name'] }}</option>\n        </select>\n      </div>\n      <button type=\"submit\" class=\"btn blue\">Remove user</button>\n    </form>\n    <form v-if=\"activeView === 'addUser'\" action=\"javascript:void(0)\" v-on:submit=\"addUser\" id=\"addUser\">\n      <div class=\"row input-field\">\n        <input v-model=\"addUser_data.emailUserToAdd\" type=\"email\" id=\"addUserEmail\" required />\n        <label for=\"addUserEmail\" class=\"active\">Enter user email</label>\n      </div>\n      <button type=\"submit\" class=\"btn blue\">Add user</button>\n    </form>\n    <form v-if=\"activeView === 'updateFloor'\" action=\"javascript:void(0)\" id=\"updateFloor\">\n      <div class=\"row input-field\">\n        <select id=\"updateFloorSelect\" v-model=\"updateFloor_data.selectedFloorToUpdate\" v-on:change=\"getFloorToUpdate\">\n          <option value=\"\" disabled>Select floor to update</option>\n          <option v-for=\"(item, index) in updateFloor_data.floor_list\" :key=\"index\" :value=\"item\">{{ item }}</option>\n        </select>\n      </div>\n      <div v-if=\"updateFloor_data.data_to_update\" class=\"row\">\n        <div class=\"col s6\">\n          <div class=\"row input-field\" style=\"margin-bottom: 25px;\">\n            <input type=\"checkbox\" id=\"updateFloorPermission_public\"/>\n            <label for=\"updateFloorPermission_public\">Public</label>\n          </div>\n          <div class=\"row input-field\" style=\"margin-bottom: 25px;\">\n            <input type=\"checkbox\" id=\"updateFloorPermission_hidden\"/>\n            <label for=\"updateFloorPermission_hidden\">Hidden</label>\n          </div>\n          <div class=\"row input-field\" style=\"margin-bottom: 25px;\">\n            <input type=\"checkbox\" id=\"updateFloorPermission_everybody\"/>\n            <label for=\"updateFloorPermission_everybody\">Everybody can create rooms</label>\n          </div>\n          <div class=\"row input-field\" style=\"margin-bottom: 25px;\">\n            <input type=\"checkbox\" id=\"updateFloorPermission_creators\"/>\n            <label for=\"updateFloorPermission_creators\">Creators can remove their rooms</label>\n          </div>\n        </div>\n        <div class=\"col s6\">\n          <div class=\"row\"/>\n          <div class=\"row\"/>\n          <button type=\"button\" v-on:click=\"updateSettings\" class=\"btn blue\">Update settings</button>\n        </div>\n        <div class=\"row\"/>\n        <div class=\"row\">\n          <div class=\"col s6\">\n            <b>Level administrators:</b>\n            <select id=\"updateFloorLevelAdministratorSelect\" v-model=\"updateFloor_data.selectedLevelAdministrator\">\n              <option value=\"\" disabled>Select level administrator</option>\n              <option v-for=\"(item, index) in updateFloor_data.level_administrator_list\" :key=\"index\" :value=\"item\">{{item['email']}} - {{item['first_name']}} {{item['second_name']}}</option>\n            </select>\n            <button type=\"button\" v-on:click=\"removeLevelAdministrator\" class=\"btn blue\">Remove level admin</button>\n          </div>\n          <div class=\"col s6\">\n            <b>Users:</b>\n            <select id=\"updateFloorUserSelect\" v-model=\"updateFloor_data.selectedUser\">\n              <option value=\"\" disabled>Select user</option>\n              <option v-for=\"(item, index) in updateFloor_data.nolevel_administrator_list\" :key=\"index\" :value=\"item\">{{item['email']}} - {{item['first_name']}} {{item['second_name']}}</option>\n            </select>\n            <button type=\"button\" v-on:click=\"addLevelAdministrator\" class=\"btn blue\">Add level admin</button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport M from 'materialize-css';\nimport _ from 'lodash';\n\nexport default {\n  name: \"adminBuildingDiv\",\n  data() {\n    return {\n      activeView: '',\n      removeFloor_data: {\n        floor_list: null,\n        selectedFloorToRemove: '',\n      },\n      addUser_data: {\n        emailUserToAdd: '',\n      },\n      removeUser_data: {\n        user_list: null,\n        selectedUserToRemove: '',\n      },\n      updateFloor_data: {\n        floor_list: null,\n        selectedFloorToUpdate: '',\n        data_to_update: null,\n        user_list: null,\n        selectedLevelAdministrator: '',\n        selectedUser: '',\n        level_administrator_list: null,\n        nolevel_administrator_list: null,\n      }\n    }\n  },\n  props: {\n    buildingName: String,\n  },\n  methods: {\n    async changeView(view) {\n      if (view === this.activeView)\n        this.activeView = !this.activeView;\n      else {\n        this.activeView = view;\n        if (view === 'removeFloor') {\n          await this.$root.ADMIN_getAllFloorsForBuilding(this.buildingName).then((response) => {\n            if (response[0] === true)\n              this.removeFloor_data.floor_list = response[1];\n            else\n              M.toast({html: response[1], classes: \"rounded orange\", displayLength: 2000});\n          });\n          M.FormSelect.init(document.getElementById('removeFloorSelect'));\n        }\n        else if (view === 'removeUser') {\n          await this.$root.ADMIN_getAllUsersForBuilding(this.buildingName).then( (response) => {\n            if (response[0] === true)\n              this.removeUser_data.user_list = response[1];\n            else\n              M.toast({ html: response[1], classes: \"rounded orange\", displayLength: 2000 });\n          });\n          M.FormSelect.init(document.getElementById('removeUserSelect'));\n        }\n        else if (view === 'updateFloor') {\n          await this.$root.ADMIN_getAllFloorsForBuilding(this.buildingName).then((response) => {\n            if (response[0] === true)\n              this.updateFloor_data.floor_list = response[1];\n            else\n              M.toast({ html: response[1], classed: \"rounded orange\", displayLength: 2000 });\n          });\n          await this.$root.ADMIN_getAllUsersForBuilding(this.buildingName).then((response) => {\n            if (response[0] === true)\n              this.updateFloor_data.user_list = response[1];\n            else\n              M.toast({ html: response[1], classed: \"rounded orange\", displayLength: 2000 });\n          });\n          M.FormSelect.init(document.getElementById('updateFloorSelect'));\n        }\n      }\n    },\n    async addFloor() {\n      const perm_hidden = document.getElementById('addFloorPermission_hidden').checked;\n      const perm_public = document.getElementById('addFloorPermission_public').checked;\n      const perm_everybody = document.getElementById('addFloorPermission_everybody').checked;\n      const perm_creators = document.getElementById('addFloorPermission_creators').checked;\n      if (perm_creators === true && perm_everybody === false) {\n        M.toast({ html:\"Logic error in permission select. 4rd cannot be checked when 3rd is not checked\", classes: \"rounded orange\", displayLength: 2000})\n      } else {\n        const name = document.getElementById('addFloorName').value;\n        const permissions = [perm_public, perm_hidden, perm_everybody, perm_creators];\n        await this.$root.ADMIN_addFloorToBuilding(this.buildingName, name, permissions).then(async (response) => {\n          if (response[0] === true) {\n            M.toast({html: 'Floor has been created', classes: \"rounded green\", displayLength: 2000});\n            document.getElementById(\"addFloor\").reset();\n            await this.changeView('');\n          }\n          else\n            M.toast({ html: response[1], classes: \"rounded orange\", displayLength: 2000 });\n        });\n      }\n    },\n    async removeFloor() {\n      if (this.removeFloor_data.selectedFloorToRemove === '') {\n        M.toast({ html: 'You have to choose floor to delete', classes: \"rounded orange\", displayLength: 2000 });\n      } else {\n        await this.$root.ADMIN_removeFloor(this.buildingName, this.removeFloor_data.selectedFloorToRemove).then(async (response) => {\n          if (response[0] === true) {\n            M.toast({html: 'Floor has been removed', classes: \"rounded green\", displayLength: 2000});\n            await this.changeView('');\n          } else {\n            M.toast({html: response[1], classes: \"rounded orange\", displayLength: 2000});\n          }\n        });\n      }\n    },\n    async removeUser() {\n      if (this.removeUser_data.selectedUserToRemove === '') {\n        M.toast({ html: 'You have to choose floor to delete', classes: \"rounded orange\", displayLength: 2000 });\n      } else {\n        await this.$root.ADMIN_removeUserFromBuilding(this.buildingName, this.removeUser_data.selectedUserToRemove).then(async (response) => {\n          if (response[0] === true) {\n            M.toast({html: 'User has been removed', classes: \"rounded green\", displayLength: 2000});\n            await this.changeView('');\n          } else\n            M.toast({ html: response[1], classes: \"rounded orange\", displayLength: 2000 });\n        });\n      }\n    },\n    async addUser() {\n      await this.$root.ADMIN_addUserToBuilding(this.buildingName, this.addUser_data.emailUserToAdd).then(async (response) => {\n        if (response[0] === true) {\n          M.toast({html: 'User has been added to building', classes: \"rounded green\", displayLength: 2000});\n          await this.changeView('');\n        } else\n          M.toast({ html: response[1], classes: \"rounded orange\", displayLength: 2000 });\n      });\n    },\n    async getFloorToUpdate() {\n      await this.$root.ADMIN_getFullFloorData(this.buildingName, this.updateFloor_data.selectedFloorToUpdate).then((response) => {\n        if (response[0] === true)\n          this.updateFloor_data.data_to_update = response[1][0];\n        else\n          M.toast({ html: response[1], classes:\"rounded orange\", displayLength: 2000 });\n      });\n      const parser = new DOMParser();\n      const xml_doc = parser.parseFromString(this.updateFloor_data.data_to_update['xml_document'], 'text/xml');\n      const settings = xml_doc.getElementsByTagName('setting');\n      const perm_sel_pub = document.getElementById('updateFloorPermission_public');\n      const perm_sel_hid = document.getElementById('updateFloorPermission_hidden');\n      const perm_sel_eve = document.getElementById('updateFloorPermission_everybody');\n      const perm_sel_cre = document.getElementById('updateFloorPermission_creators');\n      ((settings[0].attributes[0].value === 'True') ? perm_sel_pub.checked = true : perm_sel_pub.checked=false);\n      ((settings[1].attributes[0].value === 'True') ? perm_sel_hid.checked = true : perm_sel_hid.checked=false);\n      ((settings[2].attributes[0].value === 'True') ? perm_sel_eve.checked = true : perm_sel_eve.checked=false);\n      ((settings[3].attributes[0].value === 'True') ? perm_sel_cre.checked = true : perm_sel_cre.checked=false);\n      const level_administrators = xml_doc.getElementsByTagName('level_administrator');\n      let level_administrators_ids = [];\n      for (let i = 0; i < level_administrators.length; i++) {\n        level_administrators_ids.push(Number(level_administrators[i].attributes[0].value));\n      }\n      this.updateFloor_data.level_administrator_list = await _.filter(this.updateFloor_data.user_list, (item) => {\n        for(let i = 0; i < level_administrators_ids.length ; i++)\n          if(Number(item[\"id\"]) === Number(level_administrators_ids[i]))\n            return true\n        return false;\n      });\n      this.updateFloor_data.nolevel_administrator_list = await _.filter(this.updateFloor_data.user_list, (item) => {\n        for(let i = 0; i < level_administrators_ids.length ; i++)\n          if(Number(item[\"id\"]) === Number(level_administrators_ids[i]))\n            return false;\n        return true;\n      })\n      await M.FormSelect.init(document.getElementById('updateFloorLevelAdministratorSelect'));\n      await M.FormSelect.init(document.getElementById('updateFloorUserSelect'));\n      await this.$forceUpdate();\n    },\n    async removeLevelAdministrator() {\n      const parser = new DOMParser();\n      let xml_document = parser.parseFromString(this.updateFloor_data.data_to_update['xml_document'], 'text/xml');\n      let elements = xml_document.getElementsByTagName('level_administrator');\n      let i = 0;\n      for(; i < elements.length; i++) {\n        if (Number(elements[i].getAttribute('client_id')) === this.updateFloor_data.selectedLevelAdministrator['id']) {\n          break;\n        }\n      }\n      elements[i].parentNode.removeChild(elements[i]);\n      await this.$root.ADMIN_update_floor_xml_document(this.buildingName, this.updateFloor_data.selectedFloorToUpdate, xml_document).then(async (response) => {\n        if (response[0] === true) {\n          M.toast({ html: 'Level administrator role has been deleted', classes: 'rounded green', displayLength: 2000 });\n          await this.getFloorToUpdate();\n        } else\n          M.toast({ html: response[1], classes: 'rounded orange', displayLength: 2000 });\n      });\n    },\n    async addLevelAdministrator() {\n      const parser = new DOMParser();\n      let xml_document = parser.parseFromString(this.updateFloor_data.data_to_update['xml_document'], 'text/xml');\n      let new_node = xml_document.createElement('level_administrator');\n      new_node.setAttribute('client_id', this.updateFloor_data.selectedUser['id']);\n      xml_document.getElementsByTagName('level_administrator')[0].appendChild(new_node);\n      await this.$root.ADMIN_update_floor_xml_document(this.buildingName, this.updateFloor_data.selectedFloorToUpdate, xml_document).then(async (response) => {\n        if (response[0] === true) {\n          M.toast({html: 'Level administrator has been added', classes: \"rounded green\", displayLength: 2000});\n          await this.getFloorToUpdate();\n        }\n        else\n          M.toast({ html: response[1], classes: \"rounded orange\", displayLength: 2000 });\n      });\n    },\n    async updateSettings() {\n      const new_settings = [document.getElementById('updateFloorPermission_public').checked, document.getElementById('updateFloorPermission_hidden').checked,\n      document.getElementById('updateFloorPermission_everybody').checked, document.getElementById('updateFloorPermission_creators').checked];\n      const parser = new DOMParser();\n      let xml_document = parser.parseFromString(this.updateFloor_data.data_to_update['xml_document'], 'text/xml');\n      console.log(xml_document);\n      let permissions = xml_document.getElementsByTagName('setting');\n      if (permissions[0].getAttribute('public').toLowerCase() !== String(new_settings[0]).toLowerCase())\n        permissions[0].setAttribute('public', (new_settings[0] === true) ? 'True' : 'False')\n      if (permissions[1].getAttribute('hidden').toLowerCase() !== String(new_settings[1]).toLowerCase())\n        permissions[1].setAttribute('hidden', (new_settings[1] === true) ? 'True' : 'False')\n      if (permissions[2].getAttribute('everybodyCanCreateRoom').toLowerCase() !== String(new_settings[2]).toLowerCase())\n        permissions[2].setAttribute('everybodyCanCreateRoom', (new_settings[2] === true) ? 'True' : 'False')\n      if (permissions[3].getAttribute('creatorCanDeleteRoom').toLowerCase() !== String(new_settings[3]).toLowerCase())\n        permissions[3].setAttribute('creatorCanDeleteRoom', (new_settings[3] === true) ? 'True' : 'False')\n      // await this.$root.ADMIN_update_floor_xml_document(this.buildingName, this.updateFloor_data.selectedFloorToUpdate, xml_document).then(async (response) => {\n      //   if (response[0] === true) {\n      //     M.toast({html: 'Floor settings has been updated', classes: 'rounded green', displayLength: 2000});\n      //     await this.getFloorToUpdate();\n      //   }\n      //   else\n      //     M.toast({ html: response[1], classes: 'rounded orange', displayLength: 2000 });\n      // });\n      console.log(xml_document);\n    },\n    ////\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":""}]}