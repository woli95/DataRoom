{"remainingRequest":"/home/woli/Projects/DataRoom/frontend/node_modules/babel-loader/lib/index.js!/home/woli/Projects/DataRoom/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/woli/Projects/DataRoom/frontend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/woli/Projects/DataRoom/frontend/src/components/enterBuildingDiv.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/woli/Projects/DataRoom/frontend/src/components/enterBuildingDiv.vue","mtime":1612050443179},{"path":"/home/woli/Projects/DataRoom/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/woli/Projects/DataRoom/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/woli/Projects/DataRoom/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/woli/Projects/DataRoom/frontend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/woli/Projects/DataRoom/frontend/src/components/enterBuildingDiv.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"center-align\">\n    <a href=\"javascript:void(0)\" v-on:click=\"currently.building = null; currently.floor = null; currently.room = null;\"><span v-if=\"currently.building\">{{ currently.building[\"building_name\"] }}</span></a>\n    <span v-if=\"currently.floor\"> > <a href=\"javascript:void(0)\" v-on:click=\"currently.floor = null; currently.room = null\">{{ currently.floor[\"floor_name\"] }}</a></span>\n    <span v-if=\"currently.room\"> > <a href=\"javascript:void(0)\" v-on:click=\"currently.room = null\">{{ currently.room['room_name'] }}</a></span>\n  </div>\n  <div v-if=\"currently.building === null\" class=\"col s4 buildingList\">\n    <h3 class=\"center-align title\">Choose building</h3>\n    <ul>\n      <li v-for=\"(item, index) in list.building_list\" :key=\"index\" class=\"list_item\">\n        <a href=\"javascript:void(0)\" v-on:click=\"selectBuilding(item)\">\n          {{ item[\"building_name\"] }}\n        </a>\n      </li>\n    </ul>\n  </div>\n  <div v-else-if=\"currently.building !== null && currently.floor === null\" class=\"col s4\">\n    <h3 class=\"center-align title\">Choose floor</h3>\n    <ul>\n      <li v-for=\"(item, index) in list.floor_list\" :key=\"index\" class=\"list_item\">\n        <a v-if=\"item['isAdmin'] === true || item['isUser'] === true || item['isSuper'] === true || item['public'] === true\" href=\"javascript:void(0)\" v-on:click=\"enterFloor(item)\">\n          {{ item[\"floor_name\"] }}\n        </a>\n        <a v-else>{{  item[\"floor_name\"] }} [X]</a>\n      </li>\n    </ul>\n  </div>\n  <div v-else-if=\"currently.floor !== null && currently.room === null\" class=\"col s4\">\n    <h3 class=\"center-align title\">Choose room</h3>\n    <ul>\n      <li v-for=\"(item, index) in list.room_list\" :key=\"index\" class=\"list_item\">\n        <a href=\"javascript:void(0)\" v-on:click=\"enterRoom(item)\" >{{ item['room_name'] }}</a>\n      </li>\n    </ul>\n    <div v-if=\"this.currently.floor['isAdmin'] === true\" class=\"row\">\n      <hr style=\"color:deepskyblue; width: 70%\"/>\n        <h5>Floor administrator panel</h5>\n      <button v-on:click=\"changeActiveForm('createRoom')\" type=\"button\" class=\"btn blue darken-2\">Create room</button>\n      <button v-on:click=\"changeActiveForm('deleteRoom')\" type=\"button\" class=\"btn blue lighten-2\">Delete room</button>\n      <button v-on:click=\"changeActiveForm('manageRoomPermission')\" type=\"button\" class=\"btn blue darken-2\">Manage room permissions</button>\n      <button v-on:click=\"changeActiveForm('manageFloorPermission')\" type=\"button\" class=\"btn blue lighten-2\">Manage floor permissions</button>\n    </div>\n    <div v-else-if=\"this.currently.floor['everybodyCanCreateRoom'] === true\">\n      <button v-on:click=\"changeActiveForm('createRoom')\" type=\"button\" class=\"btn blue darken-2\">Create room</button>\n    </div>\n    <form action=\"javascript:void(0)\" v-on:submit=\"addRoom\" id=\"CREATE_ROOM_FORM\" v-if=\"activeForm === 'createRoom'\">\n      <div class=\"row\">\n        <div class=\"input-field col s6\">\n          <i class=\"material-icons prefix\">domain</i>\n          <input class=\"validate\" id=\"createRoomName\" type=\"text\" required/>\n          <label for=\"createRoomName\" class=\"active\">Room name</label>\n        </div>\n        <div class=\"col s6\">\n          <div class=\"row input-field\" style=\"margin-bottom: 25px;\">\n            <input type=\"checkbox\" id=\"createRoomPermission_public\"/>\n            <label for=\"createRoomPermission_public\">Public</label>\n          </div>\n          <div class=\"row input-field\" style=\"margin-bottom: 25px;\">\n            <input type=\"checkbox\" id=\"createRoomPermission_hidden\"/>\n            <label for=\"createRoomPermission_hidden\">Hidden</label>\n          </div>\n        </div>\n        <div class=\"input-field col s6\">\n          <button type=\"submit\" class=\"btn blue\">Create room</button>\n        </div>\n      </div>\n    </form>\n    <form action=\"javascript:void(0)\" v-on:submit=\"deleteRoom\" id=\"DELETE_ROOM_FORM\" v-if=\"activeForm === 'deleteRoom'\">\n      <div class=\"col s10\">\n        <select id=\"deleteRoomSelect\" v-model=\"DELETE_ROOM_DATA.selected_room_to_delete\">\n          <option value=\"\" disabled>Select room to delete</option>\n          <option v-for=\"(item, index) in DELETE_ROOM_DATA.room_list\" :key=\"index\" :value=\"item\">{{item}}</option>\n        </select>\n        <button v-if=\"DELETE_ROOM_DATA.selected_room_to_delete !== ''\" type=\"submit\" class=\"btn blue\">Delete room</button>\n      </div>\n    </form>\n    <form action=\"javascript:void(0)\"  id=\"MANAGE_FLOOR_PERMISSION_FORM\" v-if=\"activeForm === 'manageFloorPermission'\">\n      <div class=\"row\">\n        <div class=\"col s6\">\n          <select id=\"addUToFloorSelect\" v-model=\"MANAGE_FLOOR_PERMISSION_DATA.selected_user_to_add_to_floor\">\n            <option value=\"\" disabled>Select user to add</option>\n            <option v-for=\"(item, index) in MANAGE_FLOOR_PERMISSION_DATA.building_users_not_in_floor\" :key=\"index\" :value=\"item\">{{item['email']}} - {{item['first_name']}} {{item['second_name']}}</option>\n          </select>\n          <button v-if=\"MANAGE_FLOOR_PERMISSION_DATA.selected_user_to_add_to_floor !== ''\" v-on:click=\"addUserToFloor\" type=\"button\" class=\"btn blue\">Add user to floor</button>\n        </div>\n        <div class=\"col s6\">\n          <select id=\"removeUFromFloorSelect\" v-model=\"MANAGE_FLOOR_PERMISSION_DATA.selected_user_to_remove_from_floor\">\n            <option value=\"\" disabled>Select user to delete</option>\n            <option v-for=\"(item, index) in MANAGE_FLOOR_PERMISSION_DATA.floor_users\" :key=\"index\" :value=\"item\">{{item['email']}} - {{item['first_name']}} {{item['second_name']}}</option>\n          </select>\n          <button v-if=\"MANAGE_FLOOR_PERMISSION_DATA.selected_user_to_remove_from_floor !== ''\" v-on:click=\"deleteUserFromFloor\" type=\"button\" class=\"btn blue\">Delete user from floor</button>\n        </div>\n      </div>\n    </form>\n    <form action=\"javascript:void(0)\" id=\"MANAGE_ROOM_PERMISSION_FORM\" v-if=\"activeForm === 'manageRoomPermission'\">\n      <div class=\"col s10\">\n          <select id=\"managePermissionSelectRoom\" v-model=\"MANAGE_ROOM_PERMISSION_DATA.selected_room\" v-on:change=\"selectRoomToManage\">\n            <option value=\"\" disabled>Select room to manage</option>\n            <option v-for=\"(item, index) in MANAGE_ROOM_PERMISSION_DATA.room_list\" :key=\"index\" :value=\"item\">{{ item }}</option>\n          </select>\n      </div>\n      <div class=\"row\" v-if=\"MANAGE_ROOM_PERMISSION_DATA.selected_room !== ''\">\n        <hr style=\"color: deepskyblue; width: 75%;\">\n        <div class=\"col s6\">\n          <div id=\"settings\">\n            <h6>Room settings</h6>\n            <div class=\"col s6\">\n            <div class=\"row input-field\" style=\"margin-left: 25px; margin-bottom: 25px;\">\n              <input type=\"checkbox\" id=\"managePermission_public\" v-model=\"MANAGE_ROOM_PERMISSION_DATA.selected_setting_public\"/>\n              <label for=\"managePermission_public\">Public</label>\n            </div>\n            <div class=\"row input-field\" style=\"margin-left: 25px; margin-bottom: 25px;\">\n              <input type=\"checkbox\" id=\"managePermission_hidden\" v-model=\"MANAGE_ROOM_PERMISSION_DATA.selected_setting_hidden\"/>\n              <label for=\"managePermission_hidden\">Hidden</label>\n            </div>\n          </div>\n            <div class=\"col s6\">\n            <div class=\"row\"/>\n            <div class=\"row\"/>\n            <button type=\"button\" class=\"btn blue\" v-on:click=\"updateRoomSettings\" style=\"margin-bottom: 25px;\">Update settings</button>\n          </div>\n          </div>\n        </div>\n        <div class=\"col s6\">\n          <div id=\"deleteFRoom\">\n            <h6>Delete user from room</h6>\n            <select id=\"deleteUserFromRoomSelect\" v-model=\"MANAGE_ROOM_PERMISSION_DATA.selected_user_to_remove_from_room\">\n              <option value=\"\" disabled>Select user to remove from room</option>\n              <option v-for=\"(item, index) in MANAGE_ROOM_PERMISSION_DATA.room_users\" :key=\"index\" :value=\"item\">{{item['email']}} - </option>\n            </select>\n            <button type=\"button\" class=\"btn blue\" v-on:click=\"removeUserFromRoom\">Remove user from room</button>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\" v-if=\"MANAGE_ROOM_PERMISSION_DATA.selected_room !== ''\">\n        <hr style=\"color:deepskyblue; width: 70%\"/>\n        <h6>Add user to room</h6>\n        <div class=\"col s10\">\n          <select id=\"addUserToRoomSelect\" v-model=\"MANAGE_ROOM_PERMISSION_DATA.selected_user_to_add_to_room\">\n            <option value=\"\" disabled>Select user to add to room</option>\n            <option v-for=\"(item, index) in MANAGE_ROOM_PERMISSION_DATA.floor_users_not_in_room\" :key=\"index\" :value=\"item\">{{item['email']}}</option>\n          </select>\n          <div class=\"row input-field\">\n            <div class=\"col s6\">\n              <input type=\"checkbox\" id=\"addUserToFloor_permission_download\" v-model=\"MANAGE_ROOM_PERMISSION_DATA.selected_setting_download\"/>\n              <label for=\"addUserToFloor_permission_download\">User can delete files</label>\n            </div>\n            <div class=\"col s6\">\n              <input type=\"checkbox\" id=\"addUserToFloor_permission_upload\" v-model=\"MANAGE_ROOM_PERMISSION_DATA.selected_setting_upload\"/>\n              <label for=\"addUserToFloor_permission_upload\">User can upload files</label>\n            </div>\n          </div>\n          <button type=\"button\" class=\"btn blue\" v-on:click=\"addUserToRoom\">Add user to room</button>\n        </div>\n      </div>\n    </form>\n  </div>\n  <div v-else-if=\"currently.room !== null && list.file_list !== null\" class=\"col s4\">\n    <ul>\n      <li v-for=\"(item, index) in list.file_list\" :key=\"index\">\n        {{ item }} <a href=\"javascript:void(0)\" v-on:click=\"downloadFile(item)\">DOWNLOAD</a> <a href=\"javascript:void(0)\" v-on:click=\"deleteFile(item)\">DELETE</a>\n      </li>\n    </ul>\n    <input id=\"uploadFileInput\" type=\"file\"/>\n    <button type=\"button\" class=\"btn blue\" v-on:click=\"uploadFile\">UPLOAD FILE</button>\n  </div>\n  <div id=\"buildingEnterAdminOrUser\" class=\"modal\">\n    <div class=\"modal-content\">\n      <h4 class=\"center-align blue-text text-darken-3\">Enter building as:</h4>\n      <button type=\"button\" v-on:click=\"enterBuilding('user')\" class=\"btn btn-large blue lighten-2 left\" style=\"width:125px;\">User</button>\n      <button type=\"button\" v-on:click=\"enterBuilding('admin')\" class=\"btn btn-large blue darken-2 right\" style=\"width:125px;\">Admin</button>\n      <div class=\"row\"/>\n    </div>\n  </div>\n</template>\n<script>\nimport M from 'materialize-css';\nimport _ from 'lodash';\n\nexport default {\n  name: \"enterBuildingDiv\",\n  data() {\n    return {\n      activeForm: '',\n      list: {\n        building_list: null,\n        floor_list: null,\n        room_list: null,\n        file_list: null,\n      },\n      currently: {\n        building: null,\n        floor: null,\n        room: null,\n      },\n      tmp: {\n        val1: null,\n      },\n      DELETE_ROOM_DATA: {\n        selected_room_to_delete: '',\n        room_list: '',\n      },\n      MANAGE_FLOOR_PERMISSION_DATA: {\n        building_users_not_in_floor: '',\n        selected_user_to_add_to_floor: '',\n        selected_user_to_remove_from_floor: '',\n        floor_users: '',\n      },\n      MANAGE_ROOM_PERMISSION_DATA: {\n        selected_room: '',\n        room_list: '',\n        selected_setting_public: '',\n        selected_setting_hidden: '',\n        selected_user_to_remove_from_room: '',\n        room_users: '',\n        selected_user_to_add_to_room: '',\n        floor_users_not_in_room: '',\n        selected_setting_download: '',\n        selected_setting_upload: '',\n      },\n      ROOM_SECTION: {\n        activeView: '',\n      }\n    }\n  },\n  methods: {\n    async changeActiveForm(what) {\n      if (this.activeForm === what)\n        this.activeForm = '';\n      else {\n        this.activeForm =  what;\n        if (this.activeForm === 'deleteRoom') {\n          await this.$root.getFloorRooms(this.currently.floor[\"floor_name\"], this.currently.building[\"building_name\"]).then((response) => {\n            if (response[0] === true) {\n              this.DELETE_ROOM_DATA.room_list= response[1];\n            } else\n              M.toast({html: response[1], classes: \"rounded orange\", displayLength: 2000});\n          });\n          await setTimeout(null, 500);\n          M.FormSelect.init(await document.getElementById('deleteRoomSelect'));\n        }\n        else if (this.activeForm === 'manageRoomPermission') {\n          await this.$root.getFloorRooms(this.currently.floor[\"floor_name\"], this.currently.building[\"building_name\"]).then((response) => {\n            if (response[0] === true) {\n              this.MANAGE_ROOM_PERMISSION_DATA.room_list= response[1];\n            } else\n              M.toast({html: response[1], classes: \"rounded orange\", displayLength: 2000});\n          });\n          await setTimeout(null, 500);\n          M.FormSelect.init(document.getElementById('managePermissionSelectRoom'));\n        }\n        else if (this.activeForm === 'manageFloorPermission') {\n          let floor_xml;\n          await this.$root.LEVELADMIN_get_floor_xml(this.currently.building['building_name'], this.currently.floor['floor_name']).then((response) => {\n            if (response[0] === true)\n              floor_xml = response[1];\n            else\n              M.toast({html: response[1], classes: 'rounded orange', displayLength: 2000});\n          });\n          let building_users;\n          await this.$root.LEVELADMIN_getAllUsersForBuilding(this.currently.building['building_name']).then((response) => {\n            if (response[0] === true)\n              building_users = response[1];\n            else\n              M.toast({html: response[1], classes: 'rounded orange', displayLength: 2000});\n          });\n          const parser = new DOMParser();\n          const xml_doc = parser.parseFromString(floor_xml, 'text/xml');\n          const users = xml_doc.getElementsByTagName('user');\n          this.MANAGE_FLOOR_PERMISSION_DATA.building_users_not_in_floor = await _.filter(building_users, (item) => {\n            for (let k = 0; k < users.length; k++) {\n              if (Number(users[k].getAttribute('client_id')) === item['id'])\n                return false;\n            }\n            return true;\n          });\n          this.MANAGE_FLOOR_PERMISSION_DATA.floor_users = await _.filter(building_users, (item) => {\n            for (let k = 0; k < users.length; k++) {\n              if (Number(users[k].getAttribute('client_id')) === item['id'])\n                return true;\n            }\n            return false;\n          });\n          await setTimeout(null, 500);\n          M.FormSelect.init(document.getElementById('addUToFloorSelect'));\n          M.FormSelect.init(document.getElementById('removeUFromFloorSelect'));\n        }\n      }\n    },\n    selectBuilding(building_item) {\n      this.tmp.val1 = building_item;\n      if (building_item[\"isAdmin\"] === false)\n        this.enterBuilding('user');\n      else if (building_item[\"isAdmin\"] === true)\n        M.Modal.init(document.getElementById('buildingEnterAdminOrUser')).open();\n    },\n    async enterRoom(room_name) {\n      this.currently.room = room_name;\n      await this.$root.getFilesInRoom(room_name['room_name'], this.currently.building[\"building_name\"], this.currently.floor[\"floor_name\"]).then((response) => {\n        if (response[0] === true)\n          this.list.file_list = response[1];\n        else\n          M.toast({html: response[1], classes: \"rounded orange\", displayLength: 2000});\n      });\n    },\n    async enterFloor(floor_item) {\n      this.currently.floor = floor_item;\n      this.list.room_list = floor_item['room_data'];\n    },\n    async enterBuilding(asWho) {\n      if (this.tmp.val1[\"isAdmin\"] === true)\n        M.Modal.getInstance(document.getElementById('buildingEnterAdminOrUser')).close();\n      if (asWho === 'user') {\n        this.currently.building = this.tmp.val1;\n        await this.getFloorList(this.tmp.val1[\"building_name\"])\n      } else if (asWho === 'admin') {\n        this.$parent.changeView('admin', this.tmp.val1[\"building_name\"]);\n      }\n\n    },\n    async getBuildingList() {\n      await this.$root.getBuildingList().then((response) => {\n        if (response[0] === true)\n          this.list.building_list = response[1];\n        else\n          M.toast({html: response[1], classes: \"rounded orange\", displayLength: 2000});\n      });\n    },\n    async getFloorList(name) {\n      await this.$root.getBuildingFloors(name).then((response) => {\n        if (response[0] === false)\n          M.toast({html: response[1], classes: \"rounded orange\", displayLength: 2000});\n        else\n          this.list.floor_list = response[1];\n      });\n    },\n    async addRoom() {\n      const roomName = document.getElementById('createRoomName').value;\n      const perm_public = document.getElementById('createRoomPermission_public').checked;\n      const perm_hidden = document.getElementById('createRoomPermission_hidden').checked;\n      await this.$root.LEVELADMIN_createRoom(roomName, this.currently.floor[\"floor_name\"], this.currently.building[\"building_name\"], perm_public, perm_hidden).then(async (response) => {\n        if (response[0] === true) {\n          M.toast({html: 'Room has been created', classes: \"rounded green\", displayLength: 2000});\n          await this.enterFloor(this.currently.floor);\n          this.activeForm = '';\n        } else\n          M.toast({html: response[1], classes: \"rounded orange\", displayLength: 2000});\n      });\n    },\n    async deleteRoom() {\n      await this.$root.LEVELADMIN_deleteRoom(this.currently.building['building_name'], this.currently.floor['floor_name'], this.DELETE_ROOM_DATA.selected_room_to_delete).then(async (response) => {\n        if (response[0] === true) {\n          M.toast({html: 'Room has been deleted', classes: 'rounded green', displayLength: 2000});\n          await this.enterFloor(this.currently.floor);\n          this.activeForm = '';\n        } else\n          M.toast({html: response[1], classes: 'rounded orange', displayLength: 2000});\n      });\n    },\n    async addUserToFloor() {\n      const parser = new DOMParser();\n      let xml_string;\n      await this.$root.LEVELADMIN_get_floor_xml(this.currently.building['building_name'], this.currently.floor['floor_name']).then((response) => {\n        if (response[0] === true)\n          xml_string = response[1];\n        else\n          M.toast({html: response[1], classes: 'rounded orange', displayLength: 2000});\n      });\n      let xml_doc = parser.parseFromString(xml_string, 'text/xml');\n      let new_node = xml_doc.createElement('user');\n      new_node.setAttribute('client_id', String(this.MANAGE_FLOOR_PERMISSION_DATA.selected_user_to_add_to_floor['id']));\n      xml_doc.getElementsByTagName('users')[0].appendChild(new_node);\n      await this.$root.LEVELADMIN_update_floor_xml(this.currently.building['building_name'], this.currently.floor['floor_name'], xml_doc).then(async (response) => {\n        if (response[0] === true) {\n          M.toast({html: 'User has been added to floor', classes: 'rounded green', displayLength: 2000});\n          this.MANAGE_FLOOR_PERMISSION_DATA = {\n            building_users_not_in_floor: '',\n            selected_user_to_add_to_floor: '',\n            selected_user_to_remove_from_floor: '',\n            floor_users: ''};\n          await this.changeActiveForm('');\n        } else\n          M.toast({html: response[1], classes: 'rounded orange', displayLength: 2000});\n      });\n    },\n    async deleteUserFromFloor() {\n      const parser = new DOMParser();\n      let xml_string;\n      await this.$root.LEVELADMIN_get_floor_xml(this.currently.building['building_name'], this.currently.floor['floor_name']).then((response) => {\n        if (response[0] === true)\n          xml_string = response[1];\n        else\n          M.toast({html: response[1], classes: 'rounded orange', displayLength: 2000});\n      });\n      let xml_doc = parser.parseFromString(xml_string, 'text/xml');\n      let users = xml_doc.getElementsByTagName('user');\n      let i = 0;\n      for (; i < users.length; i++) {\n        if (Number(users[i].getAttribute('client_id')) === this.MANAGE_FLOOR_PERMISSION_DATA.selected_user_to_remove_from_floor['id']) {\n          break;\n        }\n      }\n      users[i].parentNode.removeChild(users[i]);\n      await this.$root.LEVELADMIN_update_floor_xml(this.currently.building['building_name'], this.currently.floor['floor_name'], xml_doc).then(async (response) => {\n        if (response[0] === true) {\n          M.toast({html: 'User has been removed from floor', classes: 'rounded green', displayLength: 2000});\n          this.MANAGE_FLOOR_PERMISSION_DATA = {\n            building_users_not_in_floor: '',\n            selected_user_to_add_to_floor: '',\n            selected_user_to_remove_from_floor: '',\n            floor_users: ''};\n          await this.changeActiveForm('');\n        } else M.toast({html: response[1], classes: 'rounded orange', displayLength: 2000});\n      });\n    },\n    async selectRoomToManage() {\n      let building_users;\n      let xml_string;\n      await this.$root.LEVELADMIN_get_floor_xml(this.currently.building['building_name'], this.currently.floor['floor_name']).then((response) => {\n        if (response[0] === true)\n          xml_string = response[1];\n        else\n          M.toast({ html: response[1], classes: 'rounded orange', displayLength: 2000 });\n      });\n      await this.$root.LEVELADMIN_getAllUsersForBuilding(this.currently.building['building_name']).then((response) => {\n        if (response[0] === true)\n          building_users = response[1];\n        else\n          M.toast({html: response[1], classes: 'rounded orange', displayLength: 2000});\n      });\n      const parser = new DOMParser();\n      const xml_doc = parser.parseFromString(xml_string, 'text/xml');\n      const rooms = xml_doc.getElementsByTagName('room');\n      let i = 0;\n      for (; i < rooms.length; i++) {\n        if (rooms[i].getAttribute('room_name') === this.MANAGE_ROOM_PERMISSION_DATA.selected_room)\n          break;\n      }\n      (rooms[i].getAttribute('public') === 'True') ? this.MANAGE_ROOM_PERMISSION_DATA.selected_setting_public = true : this.MANAGE_ROOM_PERMISSION_DATA.selected_setting_public = false;\n      (rooms[i].getAttribute('hidden') === 'True') ? this.MANAGE_ROOM_PERMISSION_DATA.selected_setting_hidden = true : this.MANAGE_ROOM_PERMISSION_DATA.selected_setting_hidden = false;\n      const users_in_room = rooms[i].getElementsByTagName('user');\n      this.MANAGE_ROOM_PERMISSION_DATA.floor_users_not_in_room = await _.filter(building_users, (item) => {\n        for (let j = 0; j < users_in_room.length; j++) {\n          if (Number(item['id'] === Number(users_in_room[j].getAttribute('client_id'))))\n            return false;\n        }\n        return true;\n      });\n      this.MANAGE_ROOM_PERMISSION_DATA.room_users = await _.filter(building_users, (item) => {\n        for (let j = 0; j < users_in_room.length; j++) {\n          if (Number(item['id'] === Number(users_in_room[j].getAttribute('client_id'))))\n            return true;\n        }\n        return false;\n      });\n      await setTimeout(null, 500);\n      M.FormSelect.init(document.getElementById('addUserToRoomSelect'));\n      M.FormSelect.init(document.getElementById('deleteUserFromRoomSelect'));\n    },\n    async updateRoomSettings() {\n      let xml_string;\n      await this.$root.LEVELADMIN_get_floor_xml(this.currently.building['building_name'], this.currently.floor['floor_name']).then((response) => {\n        if (response[0] === true)\n          xml_string = response[1];\n        else\n          M.toast({html: response[1], classes: 'rounded orange', displayLength: 2000});\n      });\n      const parser = new DOMParser();\n      let root = parser.parseFromString(xml_string, 'text/xml');\n      let rooms = root.getElementsByTagName('room');\n      for (let i = 0; i < rooms.length; i++) {\n        if (rooms[i].getAttribute('room_name') === this.MANAGE_ROOM_PERMISSION_DATA.selected_room) {\n          (this.MANAGE_ROOM_PERMISSION_DATA.selected_setting_public === true) ? rooms[i].setAttribute('public', 'True') : rooms[i].setAttribute('public', 'False');\n          (this.MANAGE_ROOM_PERMISSION_DATA.selected_setting_hidden === true) ? rooms[i].setAttribute('hidden', 'True') : rooms[i].setAttribute('hidden', 'False');\n        }\n      }\n      await this.$root.LEVELADMIN_update_floor_xml(this.currently.building['building_name'], this.currently.floor['floor_name'], root).then(async (response) => {\n        if (response[0] === true) {\n          M.toast({html: 'Room settings has been updated', classes: 'rounded green', displayLength: 2000});\n          await this.changeActiveForm('');\n          this.MANAGE_ROOM_PERMISSION_DATA = {\n            selected_room: '',\n            room_list: '',\n            selected_setting_public: '',\n            selected_setting_hidden: '',\n            selected_user_to_remove_from_room: '',\n            room_users: '',\n            selected_user_to_add_to_room: '',\n            floor_users_not_in_room: '',\n            selected_setting_download: '',\n            selected_setting_upload: '',\n          }\n        } else\n          M.toast({html: response[1], classes: 'rounded orange', displayLength: 2000});\n      });\n    },\n    async addUserToRoom() {\n      let xml_string;\n      await this.$root.LEVELADMIN_get_floor_xml(this.currently.building['building_name'], this.currently.floor['floor_name']).then((response) => {\n        if (response[0] === true)\n          xml_string = response[1];\n        else\n          M.toast({html: response[1], classes: 'rounded orange', displayLength: 2000});\n      });\n      const parser = new DOMParser();\n      const root = parser.parseFromString(xml_string, 'text/xml');\n      const rooms = root.getElementsByTagName('room');\n      let i = 0;\n      for (; i < rooms.length; i++) {\n        if (rooms[i].getAttribute('room_name') === this.MANAGE_ROOM_PERMISSION_DATA.selected_room)\n          break;\n      }\n      let new_node = root.createElement('user');\n      new_node.setAttribute('client_id', String(this.MANAGE_ROOM_PERMISSION_DATA.selected_user_to_add_to_room['id']));\n      new_node.setAttribute('download', (this.MANAGE_ROOM_PERMISSION_DATA.selected_setting_download === true) ? \"True\" : \"False\");\n      new_node.setAttribute('upload', (this.MANAGE_ROOM_PERMISSION_DATA.selected_setting_upload === true) ? \"True\" : \"False\");\n      rooms[i].appendChild(new_node);\n      await this.$root.LEVELADMIN_update_floor_xml(this.currently.building['building_name'], this.currently.floor['floor_name'], root).then(async (response) => {\n        if (response[0] === true) {\n          M.toast({ html: 'User has been added to room' });\n          await this.changeActiveForm('');\n          this.MANAGE_ROOM_PERMISSION_DATA = {\n            selected_room: '',\n            room_list: '',\n            selected_setting_public: '',\n            selected_setting_hidden: '',\n            selected_user_to_remove_from_room: '',\n            room_users: '',\n            selected_user_to_add_to_room: '',\n            floor_users_not_in_room: '',\n            selected_setting_download: '',\n            selected_setting_upload: '',\n          }\n        } else\n          M.toast({ html: response[1], classes: 'rounded orange', displayLength: 2000 });\n      })\n    },\n    async removeUserFromRoom() {\n      let xml_string;\n      await this.$root.LEVELADMIN_get_floor_xml(this.currently.building['building_name'], this.currently.floor['floor_name']).then((response) => {\n        if (response[0] === true)\n          xml_string = response[1];\n        else\n          M.toast({html: response[1], classes: 'rounded orange', displayLength: 2000});\n      });\n      const parser = new DOMParser();\n      let root = parser.parseFromString(xml_string, 'text/xml');\n      let rooms = root.getElementsByTagName('room');\n      let i = 0;\n      for(; i < rooms.length ; i++) {\n        if (rooms[i].getAttribute('room_name') === this.MANAGE_ROOM_PERMISSION_DATA.selected_room)\n          break;\n      }\n      let users_in_room = rooms[i].getElementsByTagName('user');\n      let j = 0;\n      for(; j < users_in_room.length; j++) {\n        if (Number(users_in_room[j].getAttribute('client_id')) === this.MANAGE_ROOM_PERMISSION_DATA.selected_user_to_remove_from_room['id'])\n          break;\n      }\n      users_in_room[j].parentNode.removeChild(users_in_room[j]);\n      await this.$root.LEVELADMIN_update_floor_xml(this.currently.building['building_name'], this.currently.floor['floor_name'], root).then(async (response) => {\n        if (response[0] === true) {\n          M.toast({html: 'User has been removed from floor', classes: 'rounded green', displayLength: 2000});\n          this.MANAGE_ROOM_PERMISSION_DATA = {\n            building_users_not_in_floor: '',\n            selected_user_to_add_to_floor: '',\n            selected_user_to_remove_from_floor: '',\n            floor_users: ''};\n          await this.changeActiveForm('');\n        } else M.toast({html: response[1], classes: 'rounded orange', displayLength: 2000});\n      });\n    },\n    async uploadFile() {\n      const file = document.getElementById('uploadFileInput');\n      if (file.files[0] === undefined)\n        M.toast({ html: 'You have to select file to upload ', classes: 'rounded orange', displayLength: 2000 });\n      else {\n        await this.$root.USER_uploadFile(this.currently.building['building_name'], this.currently.floor['floor_name'], this.currently.room['room_name'], file).then(async (response) => {\n          if (response[0] === true) {\n            M.toast({html: 'File has been uploaded', classes: 'rounded green', displayLength: 2000});\n            document.getElementById('uploadFileInput').value = '';\n            await this.enterRoom(this.currently.room);\n          } else\n            M.toast({html: response[1], classes: 'rounded orange', displayLength: 2000});\n        });\n      }\n    },\n    async downloadFile(item) {\n      await this.$root.USER_download_file(this.currently.building['building_name'], this.currently.floor['floor_name'], this.currently.room['room_name'], item).then((response) => {\n        if (response[0] !== true)\n          M.toast({ html: 'Cannot download this file', classes: 'rounded green', displayLength: 2000 });\n      });\n    },\n    async deleteFile(item) {\n      await this.$root.USER_remove_file(this.currently.building['building_name'], this.currently.floor['floor_name'], this.currently.room['room_name'], item).then(async (response) => {\n        if (response[0] === true) {\n          M.toast({html: 'File has been removed', classes: 'rounded green', displayLength: 2000});\n          await this.enterRoom(this.currently.room);\n        }\n        else\n          M.toast({ html: response[1], classes: 'rounded orange', displayLength: 2000 });\n      });\n\n    }\n  },\n    async beforeMount() {\n      await this.getBuildingList();\n    }\n}\n</script>\n\n<style scoped>\n#buildingEnterAdminOrUser {\n  width: 300px;\n}\n\n.buildingList {\n  margin: 5px;\n}\n.title {\n  color: white;\n  background-color: blue;\n  padding: 5px;\n}\n</style>"],"sourceRoot":""}]}