{"remainingRequest":"/home/woli/PycharmProjects/CloudProject/frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/woli/PycharmProjects/CloudProject/frontend/node_modules/vue-material/src/components/MdDialog/MdDialog.vue?vue&type=template&id=1d5fceea&bindings={}","dependencies":[{"path":"/home/woli/PycharmProjects/CloudProject/frontend/node_modules/vue-material/src/components/MdDialog/MdDialog.vue","mtime":499162500000},{"path":"/home/woli/PycharmProjects/CloudProject/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/woli/PycharmProjects/CloudProject/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/woli/PycharmProjects/CloudProject/frontend/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/home/woli/PycharmProjects/CloudProject/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/woli/PycharmProjects/CloudProject/frontend/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPG1kLXBvcnRhbD4KICAgIDx0cmFuc2l0aW9uIG5hbWU9Im1kLWRpYWxvZyI+CiAgICAgIDxkaXYgY2xhc3M9Im1kLWRpYWxvZyIgdi1pZj0ibWRBY3RpdmUiPgogICAgICAgIDxtZC1mb2N1cy10cmFwPgogICAgICAgICAgPGRpdiBjbGFzcz0ibWQtZGlhbG9nLWNvbnRhaW5lciIgOmNsYXNzPSJbZGlhbG9nQ29udGFpbmVyQ2xhc3NlcywgJG1kQWN0aXZlVGhlbWVdIiB2LW9uPSIkbGlzdGVuZXJzIgogICAgICAgICAgICAgICBAa2V5ZG93bi5lc2M9Im9uRXNjIj4KICAgICAgICAgICAgPHNsb3QgLz4KICAgICAgICAgICAgPGtlZXAtYWxpdmU+CiAgICAgICAgICAgICAgPG1kLW92ZXJsYXkgOmNsYXNzPSJtZEJhY2tkcm9wQ2xhc3MiIG1kLWZpeGVkIDptZC1hY3RpdmU9Im1kQWN0aXZlIiBAY2xpY2s9Im9uQ2xpY2siIHYtaWY9Im1kQmFja2Ryb3AiIC8+CiAgICAgICAgICAgIDwva2VlcC1hbGl2ZT4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvbWQtZm9jdXMtdHJhcD4KICAgICAgPC9kaXY+CiAgICA8L3RyYW5zaXRpb24+CiAgPC9tZC1wb3J0YWw+Cg=="},{"version":3,"sources":["/home/woli/PycharmProjects/CloudProject/frontend/node_modules/vue-material/src/components/MdDialog/MdDialog.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpeAC9F,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cd,CAAC,CAAC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjB,CAAC,CAAC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/woli/PycharmProjects/CloudProject/frontend/node_modules/vue-material/src/components/MdDialog/MdDialog.vue","sourceRoot":"","sourcesContent":["<template>\n  <md-portal>\n    <transition name=\"md-dialog\">\n      <div class=\"md-dialog\" v-if=\"mdActive\">\n        <md-focus-trap>\n          <div class=\"md-dialog-container\" :class=\"[dialogContainerClasses, $mdActiveTheme]\" v-on=\"$listeners\"\n               @keydown.esc=\"onEsc\">\n            <slot />\n            <keep-alive>\n              <md-overlay :class=\"mdBackdropClass\" md-fixed :md-active=\"mdActive\" @click=\"onClick\" v-if=\"mdBackdrop\" />\n            </keep-alive>\n          </div>\n        </md-focus-trap>\n      </div>\n    </transition>\n  </md-portal>\n</template>\n\n<script>\n  import MdComponent from 'core/MdComponent'\n  import MdPortal from 'components/MdPortal/MdPortal'\n  import MdOverlay from 'components/MdOverlay/MdOverlay'\n  import MdFocusTrap from 'components/MdFocusTrap/MdFocusTrap'\n\n  export default new MdComponent({\n    name: 'MdDialog',\n    components: {\n      MdPortal,\n      MdOverlay,\n      MdFocusTrap\n    },\n    props: {\n      mdActive: Boolean,\n      mdBackdrop: {\n        type: Boolean,\n        default: true\n      },\n      mdBackdropClass: {\n        type: String,\n        default: 'md-dialog-overlay'\n      },\n      mdCloseOnEsc: {\n        type: Boolean,\n        default: true\n      },\n      mdClickOutsideToClose: {\n        type: Boolean,\n        default: true\n      },\n      mdFullscreen: {\n        type: Boolean,\n        default: true\n      },\n      mdAnimateFromSource: Boolean\n    },\n    computed: {\n      dialogClasses () {\n        return {\n          'md-active': this.mdActive\n        }\n      },\n      dialogContainerClasses () {\n        return {\n          'md-dialog-fullscreen': this.mdFullscreen\n        }\n      }\n    },\n    watch: {\n      mdActive (isActive) {\n        this.$nextTick().then(() => {\n          if (isActive) {\n            this.$emit('md-opened')\n          } else {\n            this.$emit('md-closed')\n          }\n        })\n      }\n    },\n    methods: {\n      closeDialog () {\n        this.$emit('update:mdActive', false)\n      },\n      onClick () {\n        if (this.mdClickOutsideToClose) {\n          this.closeDialog()\n        }\n        this.$emit('md-clicked-outside')\n      },\n      onEsc () {\n        if (this.mdCloseOnEsc) {\n          this.closeDialog()\n        }\n      }\n    }\n  })\n</script>\n\n<style lang=\"scss\">\n  @import \"~components/MdAnimation/variables\";\n  @import \"~components/MdLayout/mixins\";\n  @import \"~components/MdElevation/mixins\";\n\n  $opacity-transition-duration: .15s;\n  $transform-transition-duration: .20s;\n  $max-duration: max($opacity-transition-duration, $transform-transition-duration);\n\n  .md-dialog {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    align-items: center;\n    justify-content: center;\n    pointer-events: none;\n    display: flex;\n    transition-duration: $max-duration;\n    z-index: 110;\n\n    &.md-dialog-leave,\n    &.md-dialog-enter-to {\n      .md-dialog-container {\n        opacity: 1;\n        transform: scale(1);\n      }\n\n      .md-dialog-fullscreen {\n        @include md-layout-xsmall {\n          opacity: 0;\n          transform: translate(0, 30%);\n        }\n      }\n    }\n\n    &.md-dialog-enter,\n    &.md-dialog-leave-to {\n      .md-dialog-container {\n        opacity: 0;\n        transform: scale(.9);\n      }\n\n      .md-dialog-fullscreen {\n        @include md-layout-xsmall {\n          opacity: 1;\n          transform: translate(0, 0);\n        }\n      }\n    }\n\n  }\n\n  .md-dialog-container {\n    @include md-elevation(24);\n    min-width: 280px;\n    max-width: 80%;\n    max-height: 80%;\n    margin: auto;\n    display: flex;\n    flex-flow: column;\n    overflow: hidden;\n    border-radius: 2px;\n    backface-visibility: hidden;\n    pointer-events: auto;\n    opacity: 1;\n    transform-origin: center center;\n    transition: opacity $opacity-transition-duration $md-transition-stand-timing, transform $transform-transition-duration $md-transition-stand-timing;\n    will-change: opacity, transform;\n\n    &.md-dialog-leave,\n    &.md-dialog-enter-to {\n      opacity: 1;\n      transform: translate(-50%, -50%) scale(1);\n    }\n\n    &.md-dialog-enter,\n    &.md-dialog-leave-to {\n      opacity: 0;\n      transform: translate(-50%, -50%) scale(.9);\n    }\n  }\n\n  .md-dialog-container {\n    .md-tabs {\n      flex: 1;\n      max-width: 100%;\n    }\n\n    .md-tabs-navigation {\n      padding: 0 12px;\n    }\n\n    .md-tab {\n      @include md-layout-xsmall {\n        padding: 12px;\n      }\n    }\n  }\n\n  .md-dialog-fullscreen {\n    @include md-layout-xsmall {\n      width: 100%;\n      height: 100%;\n      max-width: 100%;\n      max-height: 100%;\n      border-radius: 0;\n      transform: none;\n\n      &.md-dialog-enter,\n      &.md-dialog-leave-to {\n        opacity: 0;\n        transform: translate3D(0, 30%, 0);\n      }\n\n      &.md-dialog-leave,\n      &.md-dialog-enter-to {\n        opacity: 1;\n        transform: translate3D(0, 0, 0);\n      }\n    }\n  }\n</style>\n"]}]}