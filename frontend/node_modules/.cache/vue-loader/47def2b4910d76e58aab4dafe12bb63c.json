{"remainingRequest":"/home/woli/Projects/DataRoom/frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/woli/Projects/DataRoom/frontend/src/components/adminBuildingDiv.vue?vue&type=template&id=7d537104&scoped=true&bindings={\"activeView\":\"data\",\"removeFloor_data\":\"data\",\"addUser_data\":\"data\",\"removeUser_data\":\"data\",\"updateFloor_data\":\"data\",\"adminBuilding_data\":\"data\",\"buildingName\":\"props\",\"changeView\":\"options\",\"addFloor\":\"options\",\"removeFloor\":\"options\",\"removeUser\":\"options\",\"addUser\":\"options\",\"getFloorToUpdate\":\"options\",\"removeLevelAdministrator\":\"options\",\"addLevelAdministrator\":\"options\",\"updateSettings\":\"options\",\"addAdmin\":\"options\",\"removeAdmin\":\"options\"}","dependencies":[{"path":"/home/woli/Projects/DataRoom/frontend/src/components/adminBuildingDiv.vue","mtime":1611712095857},{"path":"/home/woli/Projects/DataRoom/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607646038494},{"path":"/home/woli/Projects/DataRoom/frontend/node_modules/babel-loader/lib/index.js","mtime":1607646038462},{"path":"/home/woli/Projects/DataRoom/frontend/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1607646042274},{"path":"/home/woli/Projects/DataRoom/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1607646038494},{"path":"/home/woli/Projects/DataRoom/frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1607646042274}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/woli/Projects/DataRoom/frontend/src/components/adminBuildingDiv.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACvH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjI,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACprH,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC3H,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5H,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACxB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAClrD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACtD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACxD,CAAC,CAAC,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtD,CAAC,CAAC,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACrD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACzrD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACxD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACnF,CAAC,CAAC,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1E,CAAC,CAAC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACN,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9G,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAC7E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACxvlL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACV,CAAC,CAAC,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACN,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACltF,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClE,CAAC,CAAC,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACN,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACpxrD,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UACjB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACzD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACzD,CAAC,CAAC,CAAC,CAAC,CAAC;UACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACzD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACzD,CAAC,CAAC,CAAC,CAAC,CAAC;UACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,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":"/home/woli/Projects/DataRoom/frontend/src/components/adminBuildingDiv.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\" style=\"margin: 0 !important;\">\n      <button type=\"button\" v-on:click=\"changeView('addUser')\"  class=\"btn blue darken-2 col s6\">Add user to building</button>\n      <button type=\"button\" v-on:click=\"changeView('removeUser')\" class=\"btn blue lighten-2 col s6\">Remove user from building</button>\n    </div>\n    <div class=\"row\" style=\"margin: 0 !important;\">\n      <button type=\"button\" v-on:click=\"changeView('addFloor')\" class=\"btn blue lighten-2 col s6\">Create new floor</button>\n      <button type=\"button\" v-on:click=\"changeView('removeFloor')\"  class=\"btn blue darken-2 col s6\">Remove floor</button>\n    </div>\n    <div class=\"row\" style=\"margin: 0 !important;\">\n      <button type=\"button\" v-on:click=\"changeView('updateFloor')\" class=\"btn blue darken-2 col s6\">Update floor settings</button>\n      <button type=\"button\" v-on:click=\"changeView('adminBuilding')\" class=\"btn blue lighten-2 col s6\">Manage admin role</button>\n    </div>\n    <hr style=\"color:deepskyblue\"/>\n    <form v-if=\"activeView === 'addFloor'\" action=\"javascript:void(0)\" v-on:submit=\"addFloor\" id=\"addFloor\">\n      <div class=\"row input-field\">\n          <i class=\"material-icons prefix\">remove_red_eye</i>\n          <input class=\"validate\" id=\"addFloorName\" type=\"text\" required>\n          <label for=\"addFloorName\" class=\"active\" >Floor name</label>\n      </div>\n      <div class=\"row input-field\" style=\"margin-bottom: 25px;\">\n          <input type=\"checkbox\" id=\"addFloorPermission_public\"/>\n          <label for=\"addFloorPermission_public\">Public</label>\n      </div>\n      <div class=\"row input-field\" style=\"margin-bottom: 25px;\">\n        <input type=\"checkbox\" id=\"addFloorPermission_hidden\"/>\n        <label for=\"addFloorPermission_hidden\">Hidden</label>\n      </div>\n      <div class=\"row input-field\" style=\"margin-bottom: 25px;\">\n          <input type=\"checkbox\" id=\"addFloorPermission_everybody\"/>\n          <label for=\"addFloorPermission_everybody\">Everybody can create rooms</label>\n      </div>\n      <div class=\"row input-field\" style=\"margin-bottom: 25px;\">\n          <input type=\"checkbox\" id=\"addFloorPermission_creators\"/>\n          <label for=\"addFloorPermission_creators\">Creators can remove their rooms</label>\n      </div>\n      <div class=\"row\"/>\n      <div class=\"row input-field\">\n        <button type=\"submit\" class=\"btn btn blue darken-2\">CREATE FLOOR</button>\n      </div>\n    </form>\n    <form v-if=\"activeView === 'removeFloor'\" action=\"javascript:void(0)\" v-on:submit=\"removeFloor\" id=\"removeFloor\">\n      <div class=\"row input-field\">\n        <select id=\"removeFloorSelect\" v-model=\"removeFloor_data.selectedFloorToRemove\">\n          <option value=\"\" disabled>Select floor to delete</option>\n          <option v-for=\"(item, index) in removeFloor_data.floor_list\" :key=\"index\" :value=\"item\" >{{ item }}</option>\n        </select>\n      </div>\n      <button type=\"submit\" class=\"btn blue\">Remove floor</button>\n    </form>\n    <form v-if=\"activeView === 'removeUser'\" action=\"javascript:void(0)\" v-on:submit=\"removeUser\" id=\"removeUser\">\n      <div class=\"row input-field\">\n        <select id=\"removeUserSelect\" v-model=\"removeUser_data.selectedUserToRemove\">\n          <option value=\"\" disabled>Select user to remove</option>\n          <option v-for=\"(item, index) in removeUser_data.user_list\" :key=\"index\" :value=\"item['email']\" >{{ item['email'] }} - {{ item['first_name'] }} {{ item['second_name'] }}</option>\n        </select>\n      </div>\n      <button type=\"submit\" class=\"btn blue\">Remove user</button>\n    </form>\n    <form v-if=\"activeView === 'addUser'\" action=\"javascript:void(0)\" v-on:submit=\"addUser\" id=\"addUser\">\n      <div class=\"row input-field\">\n        <input v-model=\"addUser_data.emailUserToAdd\" type=\"email\" id=\"addUserEmail\" required />\n        <label for=\"addUserEmail\" class=\"active\">Enter user email</label>\n      </div>\n      <button type=\"submit\" class=\"btn blue\">Add user</button>\n    </form>\n    <form v-if=\"activeView === 'updateFloor'\" action=\"javascript:void(0)\" id=\"updateFloor\">\n      <div class=\"row input-field\">\n        <select id=\"updateFloorSelect\" v-model=\"updateFloor_data.selectedFloorToUpdate\" v-on:change=\"getFloorToUpdate\">\n          <option value=\"\" disabled>Select floor to update</option>\n          <option v-for=\"(item, index) in updateFloor_data.floor_list\" :key=\"index\" :value=\"item\">{{ item }}</option>\n        </select>\n      </div>\n      <div v-if=\"updateFloor_data.data_to_update\" class=\"row\">\n        <div class=\"col s6\">\n          <div class=\"row input-field\" style=\"margin-bottom: 25px;\">\n            <input type=\"checkbox\" id=\"updateFloorPermission_public\"/>\n            <label for=\"updateFloorPermission_public\">Public</label>\n          </div>\n          <div class=\"row input-field\" style=\"margin-bottom: 25px;\">\n            <input type=\"checkbox\" id=\"updateFloorPermission_hidden\"/>\n            <label for=\"updateFloorPermission_hidden\">Hidden</label>\n          </div>\n          <div class=\"row input-field\" style=\"margin-bottom: 25px;\">\n            <input type=\"checkbox\" id=\"updateFloorPermission_everybody\"/>\n            <label for=\"updateFloorPermission_everybody\">Everybody can create rooms</label>\n          </div>\n          <div class=\"row input-field\" style=\"margin-bottom: 25px;\">\n            <input type=\"checkbox\" id=\"updateFloorPermission_creators\"/>\n            <label for=\"updateFloorPermission_creators\">Creators can remove their rooms</label>\n          </div>\n        </div>\n        <div class=\"col s6\">\n          <div class=\"row\"/>\n          <div class=\"row\"/>\n          <button type=\"button\" v-on:click=\"updateSettings\" class=\"btn blue\">Update settings</button>\n        </div>\n        <div class=\"row\"/>\n        <div class=\"row\">\n          <div class=\"col s6\">\n            <b>Level administrators:</b>\n            <select id=\"updateFloorLevelAdministratorSelect\" v-model=\"updateFloor_data.selectedLevelAdministrator\">\n              <option value=\"\" disabled>Select level administrator</option>\n              <option v-for=\"(item, index) in updateFloor_data.level_administrator_list\" :key=\"index\" :value=\"item\">{{item['email']}} - {{item['first_name']}} {{item['second_name']}}</option>\n            </select>\n            <button type=\"button\" v-on:click=\"removeLevelAdministrator\" class=\"btn blue\">Remove level admin</button>\n          </div>\n          <div class=\"col s6\">\n            <b>Users:</b>\n            <select id=\"updateFloorUserSelect\" v-model=\"updateFloor_data.selectedUser\">\n              <option value=\"\" disabled>Select user</option>\n              <option v-for=\"(item, index) in updateFloor_data.nolevel_administrator_list\" :key=\"index\" :value=\"item\">{{item['email']}} - {{item['first_name']}} {{item['second_name']}}</option>\n            </select>\n            <button type=\"button\" v-on:click=\"addLevelAdministrator\" class=\"btn blue\">Add level admin</button>\n          </div>\n        </div>\n      </div>\n    </form>\n    <form v-if=\"activeView === 'adminBuilding'\" action=\"javascript:void(0)\" id=\"adminBuilding\">\n      <div class=\"row\">\n        <div class=\"col s6\">\n          <select id=\"adminBuildingAdminsSelect\" v-model=\"adminBuilding_data.selectedAdmin\">\n            <option value=\"\" disabled>Select admin</option>\n            <option v-for=\"(item, index) in adminBuilding_data.Admin_list\" :key=\"index\" :value=\"item\">{{ item['email']}} - {{ item['first_name']}} {{ item['second_name'] }}</option>\n          </select>\n          <button type=\"button\" v-on:click=\"removeAdmin\" class=\"btn blue\">Take back admin role form user</button>\n        </div>\n        <div class=\"col s6\">\n          <select id=\"adminBuildingNoAdminsSelect\" v-model=\"adminBuilding_data.selectedNoAdmin\">\n            <option value=\"\" disabled>Select user</option>\n            <option v-for=\"(item, index) in adminBuilding_data.noAdmin_list\" :key=\"index\" :value=\"item\">{{item['email']}} - {{ item['first_name'] }} {{ item['second_name'] }}</option>\n          </select>\n          <button type=\"button\" v-on:click=\"addAdmin\" class=\"btn blue\">Add admin role to user</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport M from 'materialize-css';\nimport _ from 'lodash';\n\nexport default {\n  name: \"adminBuildingDiv\",\n  data() {\n    return {\n      activeView: '',\n      removeFloor_data: {\n        floor_list: null,\n        selectedFloorToRemove: '',\n      },\n      addUser_data: {\n        emailUserToAdd: '',\n      },\n      removeUser_data: {\n        user_list: null,\n        selectedUserToRemove: '',\n      },\n      updateFloor_data: {\n        floor_list: null,\n        selectedFloorToUpdate: '',\n        data_to_update: null,\n        user_list: null,\n        selectedLevelAdministrator: '',\n        selectedUser: '',\n        level_administrator_list: null,\n        nolevel_administrator_list: null,\n      },\n      adminBuilding_data: {\n        user_list: null,\n        xml_document: null,\n        noAdmin_list: null,\n        Admin_list: null,\n        selectedAdmin: '',\n        selectedNoAdmin: '',\n      }\n    }\n  },\n  props: {\n    buildingName: String,\n  },\n  methods: {\n    async changeView(view) {\n      if (view === this.activeView)\n        this.activeView = !this.activeView;\n      else {\n        this.activeView = view;\n        if (view === 'removeFloor') {\n          await this.$root.ADMIN_getAllFloorsForBuilding(this.buildingName).then((response) => {\n            if (response[0] === true)\n              this.removeFloor_data.floor_list = response[1];\n            else\n              M.toast({html: response[1], classes: \"rounded orange\", displayLength: 2000});\n          });\n          M.FormSelect.init(document.getElementById('removeFloorSelect'));\n        }\n        else if (view === 'removeUser') {\n          await this.$root.ADMIN_getAllUsersForBuilding(this.buildingName).then( (response) => {\n            if (response[0] === true)\n              this.removeUser_data.user_list = response[1];\n            else\n              M.toast({ html: response[1], classes: \"rounded orange\", displayLength: 2000 });\n          });\n          M.FormSelect.init(document.getElementById('removeUserSelect'));\n        }\n        else if (view === 'updateFloor') {\n          await this.$root.ADMIN_getAllFloorsForBuilding(this.buildingName).then((response) => {\n            if (response[0] === true)\n              this.updateFloor_data.floor_list = response[1];\n            else\n              M.toast({ html: response[1], classes: \"rounded orange\", displayLength: 2000 });\n          });\n          await this.$root.ADMIN_getAllUsersForBuilding(this.buildingName).then((response) => {\n            if (response[0] === true)\n              this.updateFloor_data.user_list = response[1];\n            else\n              M.toast({ html: response[1], classes: \"rounded orange\", displayLength: 2000 });\n          });\n          M.FormSelect.init(document.getElementById('updateFloorSelect'));\n        }\n        else if (view === 'adminBuilding') {\n          await this.$root.ADMIN_getAllUsersForBuilding(this.buildingName).then((response) => {\n            if (response[0] === true)\n              this.adminBuilding_data.user_list = response[1];\n            else\n              M.toast({ html: response[1], classes: \"rounded orange\", displayLength: 2000 });\n          });\n          await this.$root.ADMIN_getBuildingXML(this.buildingName).then((response) => {\n            if (response[0] === true)\n              this.adminBuilding_data.xml_document = response[1];\n            else\n              M.toast({ html: response[1], classes: 'rounded orange', displayLength: 2000});\n          });\n          const parser = new DOMParser();\n          const xml_doc = parser.parseFromString(this.adminBuilding_data.xml_document, 'text/xml');\n          let admins = xml_doc.getElementsByTagName('admin');\n          let admins_id = []\n          for(let i = 0; i < admins.length ; i++)\n            admins_id.push(Number(admins[i].attributes[0].value));\n          this.adminBuilding_data.Admin_list = await _.filter(this.adminBuilding_data.user_list, (item) => {\n            for(let i = 0; i < admins_id.length; i++)\n              if (Number(item['id']) === Number(admins_id[i]))\n                return true;\n            return false;\n          });\n          this.adminBuilding_data.noAdmin_list = await _.filter(this.adminBuilding_data.user_list, (item) => {\n            for(let i = 0; i < admins_id.length; i++)\n              if (Number(item['id']) === Number(admins_id[i]))\n                return false;\n            return true;\n          });\n          await M.FormSelect.init(document.getElementById('adminBuildingAdminsSelect'));\n          await M.FormSelect.init(document.getElementById('adminBuildingNoAdminsSelect'));\n        }\n      }\n    },\n    async addFloor() {\n      const perm_hidden = document.getElementById('addFloorPermission_hidden').checked;\n      const perm_public = document.getElementById('addFloorPermission_public').checked;\n      const perm_everybody = document.getElementById('addFloorPermission_everybody').checked;\n      const perm_creators = document.getElementById('addFloorPermission_creators').checked;\n      if (perm_creators === true && perm_everybody === false) {\n        M.toast({ html:\"Logic error in permission select. 4rd cannot be checked when 3rd is not checked\", classes: \"rounded orange\", displayLength: 2000})\n      } else {\n        const name = document.getElementById('addFloorName').value;\n        const permissions = [perm_public, perm_hidden, perm_everybody, perm_creators];\n        await this.$root.ADMIN_addFloorToBuilding(this.buildingName, name, permissions).then(async (response) => {\n          if (response[0] === true) {\n            M.toast({html: 'Floor has been created', classes: \"rounded green\", displayLength: 2000});\n            document.getElementById(\"addFloor\").reset();\n            await this.changeView('');\n          }\n          else\n            M.toast({ html: response[1], classes: \"rounded orange\", displayLength: 2000 });\n        });\n      }\n    },\n    async removeFloor() {\n      if (this.removeFloor_data.selectedFloorToRemove === '') {\n        M.toast({ html: 'You have to choose floor to delete', classes: \"rounded orange\", displayLength: 2000 });\n      } else {\n        await this.$root.ADMIN_removeFloor(this.buildingName, this.removeFloor_data.selectedFloorToRemove).then(async (response) => {\n          if (response[0] === true) {\n            M.toast({html: 'Floor has been removed', classes: \"rounded green\", displayLength: 2000});\n            await this.changeView('');\n          } else {\n            M.toast({html: response[1], classes: \"rounded orange\", displayLength: 2000});\n          }\n        });\n      }\n    },\n    async removeUser() {\n      if (this.removeUser_data.selectedUserToRemove === '') {\n        M.toast({ html: 'You have to choose floor to delete', classes: \"rounded orange\", displayLength: 2000 });\n      } else {\n        await this.$root.ADMIN_removeUserFromBuilding(this.buildingName, this.removeUser_data.selectedUserToRemove).then(async (response) => {\n          if (response[0] === true) {\n            M.toast({html: 'User has been removed', classes: \"rounded green\", displayLength: 2000});\n            await this.changeView('');\n          } else\n            M.toast({ html: response[1], classes: \"rounded orange\", displayLength: 2000 });\n        });\n      }\n    },\n    async addUser() {\n      await this.$root.ADMIN_addUserToBuilding(this.buildingName, this.addUser_data.emailUserToAdd).then(async (response) => {\n        if (response[0] === true) {\n          M.toast({html: 'User has been added to building', classes: \"rounded green\", displayLength: 2000});\n          await this.changeView('');\n        } else\n          M.toast({ html: response[1], classes: \"rounded orange\", displayLength: 2000 });\n      });\n    },\n    async getFloorToUpdate() {\n      await this.$root.ADMIN_getFullFloorData(this.buildingName, this.updateFloor_data.selectedFloorToUpdate).then((response) => {\n        if (response[0] === true)\n          this.updateFloor_data.data_to_update = response[1][0];\n        else\n          M.toast({ html: response[1], classes:\"rounded orange\", displayLength: 2000 });\n      });\n      const parser = new DOMParser();\n      const xml_doc = parser.parseFromString(this.updateFloor_data.data_to_update['xml_document'], 'text/xml');\n      const settings = xml_doc.getElementsByTagName('setting');\n      const perm_sel_pub = document.getElementById('updateFloorPermission_public');\n      const perm_sel_hid = document.getElementById('updateFloorPermission_hidden');\n      const perm_sel_eve = document.getElementById('updateFloorPermission_everybody');\n      const perm_sel_cre = document.getElementById('updateFloorPermission_creators');\n      ((settings[0].attributes[0].value === 'True') ? perm_sel_pub.checked = true : perm_sel_pub.checked=false);\n      ((settings[1].attributes[0].value === 'True') ? perm_sel_hid.checked = true : perm_sel_hid.checked=false);\n      ((settings[2].attributes[0].value === 'True') ? perm_sel_eve.checked = true : perm_sel_eve.checked=false);\n      ((settings[3].attributes[0].value === 'True') ? perm_sel_cre.checked = true : perm_sel_cre.checked=false);\n      const level_administrators = xml_doc.getElementsByTagName('level_administrator');\n      let level_administrators_ids = [];\n      for (let i = 0; i < level_administrators.length; i++) {\n        level_administrators_ids.push(Number(level_administrators[i].attributes[0].value));\n      }\n      this.updateFloor_data.level_administrator_list = await _.filter(this.updateFloor_data.user_list, (item) => {\n        for(let i = 0; i < level_administrators_ids.length ; i++)\n          if(Number(item[\"id\"]) === Number(level_administrators_ids[i]))\n            return true\n        return false;\n      });\n      this.updateFloor_data.nolevel_administrator_list = await _.filter(this.updateFloor_data.user_list, (item) => {\n        for(let i = 0; i < level_administrators_ids.length ; i++)\n          if(Number(item[\"id\"]) === Number(level_administrators_ids[i]))\n            return false;\n        return true;\n      })\n      await M.FormSelect.init(document.getElementById('updateFloorLevelAdministratorSelect'));\n      await M.FormSelect.init(document.getElementById('updateFloorUserSelect'));\n      await this.$forceUpdate();\n    },\n    async removeLevelAdministrator() {\n      const parser = new DOMParser();\n      let xml_document = parser.parseFromString(this.updateFloor_data.data_to_update['xml_document'], 'text/xml');\n      let elements = xml_document.getElementsByTagName('level_administrator');\n      let i = 0;\n      for(; i < elements.length; i++) {\n        if (Number(elements[i].getAttribute('client_id')) === this.updateFloor_data.selectedLevelAdministrator['id']) {\n          break;\n        }\n      }\n      elements[i].parentNode.removeChild(elements[i]);\n      await this.$root.ADMIN_update_floor_xml_document(this.buildingName, this.updateFloor_data.selectedFloorToUpdate, xml_document).then(async (response) => {\n        if (response[0] === true) {\n          M.toast({ html: 'Level administrator role has been deleted', classes: 'rounded green', displayLength: 2000 });\n          await this.getFloorToUpdate();\n        } else\n          M.toast({ html: response[1], classes: 'rounded orange', displayLength: 2000 });\n      });\n    },\n    async addLevelAdministrator() {\n      const parser = new DOMParser();\n      let xml_document = parser.parseFromString(this.updateFloor_data.data_to_update['xml_document'], 'text/xml');\n      let new_node = xml_document.createElement('level_administrator');\n      new_node.setAttribute('client_id', this.updateFloor_data.selectedUser['id']);\n      xml_document.getElementsByTagName('level_administrator')[0].appendChild(new_node);\n      await this.$root.ADMIN_update_floor_xml_document(this.buildingName, this.updateFloor_data.selectedFloorToUpdate, xml_document).then(async (response) => {\n        if (response[0] === true) {\n          M.toast({html: 'Level administrator has been added', classes: \"rounded green\", displayLength: 2000});\n          await this.getFloorToUpdate();\n        }\n        else\n          M.toast({ html: response[1], classes: \"rounded orange\", displayLength: 2000 });\n      });\n    },\n    async updateSettings() {\n      const new_settings = [document.getElementById('updateFloorPermission_public').checked, document.getElementById('updateFloorPermission_hidden').checked,\n      document.getElementById('updateFloorPermission_everybody').checked, document.getElementById('updateFloorPermission_creators').checked];\n      if (new_settings[2] === false && new_settings[3] === true) {\n        M.toast({ html: 'Logic error in settings. 4rd cannot be checked while 3th is not checked', classes: 'rounded orange', displayLength: 2000 });\n        await this.getFloorToUpdate();\n      } else {\n        const parser = new DOMParser();\n        let xml_document = parser.parseFromString(this.updateFloor_data.data_to_update['xml_document'], 'text/xml');\n        let permissions = xml_document.getElementsByTagName('setting');\n        if (permissions[0].getAttribute('public').toLowerCase() !== String(new_settings[0]).toLowerCase())\n          permissions[0].setAttribute('public', (new_settings[0] === true) ? 'True' : 'False')\n        if (permissions[1].getAttribute('hidden').toLowerCase() !== String(new_settings[1]).toLowerCase())\n          permissions[1].setAttribute('hidden', (new_settings[1] === true) ? 'True' : 'False')\n        if (permissions[2].getAttribute('everybodyCanCreateRoom').toLowerCase() !== String(new_settings[2]).toLowerCase())\n          permissions[2].setAttribute('everybodyCanCreateRoom', (new_settings[2] === true) ? 'True' : 'False')\n        if (permissions[3].getAttribute('creatorCanDeleteRoom').toLowerCase() !== String(new_settings[3]).toLowerCase())\n          permissions[3].setAttribute('creatorCanDeleteRoom', (new_settings[3] === true) ? 'True' : 'False')\n        await this.$root.ADMIN_update_floor_xml_document(this.buildingName, this.updateFloor_data.selectedFloorToUpdate, xml_document).then(async (response) => {\n          if (response[0] === true) {\n            M.toast({html: 'Floor settings has been updated', classes: 'rounded green', displayLength: 2000});\n            await this.getFloorToUpdate();\n          } else\n            M.toast({html: response[1], classes: 'rounded orange', displayLength: 2000});\n        });\n      }\n    },\n    async addAdmin() {\n      if (this.adminBuilding_data.selectedNoAdmin === '')\n        M.toast({ html: 'You have to select user', classes:'rounded orange', displayLength: 2000 });\n      else {\n        const parser = new DOMParser();\n        let xml_document = parser.parseFromString(this.adminBuilding_data.xml_document, 'text/xml');\n        let new_node = xml_document.createElement('admin');\n        new_node.setAttribute('client_id', this.adminBuilding_data.selectedNoAdmin['id']);\n        xml_document.getElementsByTagName('admin')[0].appendChild(new_node);\n        await this.$root.ADMIN_update_building_xml_document(this.buildingName, xml_document).then(async (response) => {\n          if (response[0] === true) {\n            M.toast({html: 'Admin role has been added to user', classes: 'rounded green', displayLength: 2000});\n            await this.changeView('');\n            await this.changeView('adminBuilding');\n          } else\n            M.toast({html: response[1], classes: 'rounded orange', displayLength: 2000});\n        });\n      }\n    },\n    async removeAdmin() {\n      if (this.adminBuilding_data.selectedAdmin === '')\n        M.toast({ html: 'You have to select admin delete his role', classes:'rounded orange', displayLength: 2000 });\n      else {\n        const parser = new DOMParser();\n        let xml_document = parser.parseFromString(this.adminBuilding_data.xml_document, 'text/xml');\n        let elements = xml_document.getElementsByTagName('admin');\n        let i = 0;\n        for (; i < elements.length; i++) {\n          if (Number(elements[i].getAttribute('client_id')) === this.adminBuilding_data.selectedAdmin['id'])\n            break;\n        }\n        elements[i].parentNode.removeChild(elements[i]);\n        await this.$root.ADMIN_update_building_xml_document(this.buildingName, xml_document).then(async (response) => {\n          if (response[0] === true) {\n            M.toast({html: 'Admin role has been deleted', classes: 'rounded green', displayLength: 2000});\n            await this.changeView('');\n            await this.changeView('adminBuilding');\n          } else\n            M.toast({html: response[1], classes: 'rounded orange', displayLength: 2000});\n        });\n      }\n    }\n    ////\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]}]}